<?php echo $this->doctype() . "\n"; ?>
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="es" lang="es">
    <head>
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <meta name="description" content="" />
        <meta name="author" content="" />
        <title><?php echo $this->setting["se_title"]; ?></title>
        <?php
        echo $this->headLink(array('rel' => 'shortcut icon', 'type' => 'image/vnd.microsoft.icon', 'href' => $this->baseUrl() . '/imgs/favicon.png'))
                ->prependStylesheet($this->baseUrl() . '/font-awesome-4.1.0/css/font-awesome.min.css')
                ->prependStylesheet($this->baseUrl() . '/css/usina.css')
                ->prependStylesheet($this->baseUrl() . '/css/plugins/metisMenu/metisMenu.min.css')
                ->prependStylesheet($this->baseUrl() . '/css/bootstrap-theme.css')
                ->prependStylesheet($this->baseUrl() . '/css/bootstrap.css')
                ->prependStylesheet($this->baseUrl() . '/css/jquery-ui.css')
                ->prependStylesheet($this->baseUrl() . '/css/bootstrap-rta-1.0.1.min.css')
                ->prependStylesheet($this->baseUrl() . '/css/imgareaselect-default.css');
        echo $this->headScript()
                ->prependFile($this->baseUrl() . '/js/Common.js', 'text/javascript')
                ->prependFile($this->baseUrl() . '/js/plugins/metisMenu/metisMenu.min.js', 'text/javascript')
                ->prependFile($this->baseUrl() . '/js/jquery.form.js', 'text/javascript')
                ->prependFile($this->baseUrl() . '/extras/ckeditor/adapters/jquery.js', 'text/javascript')
                ->prependFile($this->baseUrl() . '/js/bootstrap.validate.en.js', 'text/javascript')
                ->prependFile($this->baseUrl() . '/js/bootstrap.validate.js', 'text/javascript')
                ->prependFile($this->baseUrl() . '/js/bootstrap-rta.min.js', 'text/javascript')
                ->prependFile($this->baseUrl() . '/js/popover.js', 'text/javascript')
                ->prependFile($this->baseUrl() . '/js/respond.min.js', 'text/javascript', array('conditional' => 'lt IE 9',))
                ->prependFile($this->baseUrl() . '/js/html5shiv.js', 'text/javascript', array('conditional' => 'lt IE 9',))
                ->prependFile($this->baseUrl() . '/js/bootstrap.min.js', 'text/javascript')
                ->prependFile($this->baseUrl() . '/js/jquery.imgareaselect.pack.js', 'text/javascript')
                ->prependFile($this->baseUrl() . '/js/jquery-ui.js', 'text/javascript')
                ->prependFile($this->baseUrl() . '/js/jquery-1.9.1.js', 'text/javascript')
                ->prependFile($this->baseUrl() . '/extras/ckeditor/ckeditor.js', 'text/javascript')
                ->prependFile($this->baseUrl() . '/js/holder.js', 'text/javascript')
        ;
        ?>
        <!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->
        <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
        <!--[if lt IE 9]>
            <script src="https://oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js"></script>
            <script src="https://oss.maxcdn.com/libs/respond.js/1.4.2/respond.min.js"></script>
        <![endif]-->

    </head>
    <body>
        <?php echo $this->render('messages.phtml', array('messages' => $this->messages)); ?>
        <?php echo $this->layout()->content; ?>
    </body>
    <script>
        (function($) {
            $.widget("custom.combobox", {
                _create: function() {
                    this.wrapper = $("<span>")
                            .addClass("custom-combobox")
                            .insertAfter(this.element);

                    this.element.hide();
                    this._createAutocomplete();
                    this._createShowAllButton();
                },
                _createAutocomplete: function() {
                    var selected = this.element.children(":selected"),
                            value = selected.val() ? selected.text() : "";

                    this.input = $("<input>")
                            .appendTo(this.wrapper)
                            .val(value)
                            .attr("title", "")
                            .attr("data-validate", "required")
                            .addClass("custom-combobox-input form-control ui-widget ui-widget-content ui-state-default ui-corner-left")
                            .autocomplete({
                                delay: 0,
                                minLength: 0,
                                source: $.proxy(this, "_source")
                            })
                            .tooltip({
                                tooltipClass: "ui-state-highlight"
                            });

                    this._on(this.input, {
                        autocompleteselect: function(event, ui) {
                            ui.item.option.selected = true;
                            this._trigger("select", event, {
                                item: ui.item.option
                            });
                        },
                        autocompletechange: "_removeIfInvalid"
                    });
                },
                _createShowAllButton: function() {
                    var input = this.input,
                            wasOpen = false;

                    $("<a>")
                            .attr("tabIndex", -1)
                            .attr("title", "Show All Items")
                            .tooltip()
                            .appendTo(this.wrapper)
                            .button({
                                icons: {
                                    primary: "ui-icon-triangle-1-s"
                                },
                                text: false
                            })
                            .removeClass("ui-corner-all")
                            .addClass("custom-combobox-toggle ui-corner-right")
                            .mousedown(function() {
                                wasOpen = input.autocomplete("widget").is(":visible");
                            })
                            .click(function() {
                                input.focus();

                                // Close if already visible
                                if (wasOpen) {
                                    return;
                                }

                                // Pass empty string as value to search for, displaying all results
                                input.autocomplete("search", "");
                            });
                },
                _source: function(request, response) {
                    var matcher = new RegExp($.ui.autocomplete.escapeRegex(request.term), "i");
                    response(this.element.children("option").map(function() {
                        var text = $(this).text();
                        if (this.value && (!request.term || matcher.test(text)))
                            return {
                                label: text,
                                value: text,
                                option: this
                            };
                    }));
                },
                _removeIfInvalid: function(event, ui) {

                    // Selected an item, nothing to do
                    if (ui.item) {
                        return;
                    }

                    // Search for a match (case-insensitive)
                    var value = this.input.val(),
                            valueLowerCase = value.toLowerCase(),
                            valid = false;
                    this.element.children("option").each(function() {
                        if ($(this).text().toLowerCase() === valueLowerCase) {
                            this.selected = valid = true;
                            return false;
                        }
                    });

                    // Found a match, nothing to do
                    if (valid) {
                        return;
                    }

                    // Remove invalid value
                    this.input
                            .val("")
                            .attr("title", value + " didn't match any item")
                            .tooltip("open");
                    this.element.val("");
                    this._delay(function() {
                        this.input.tooltip("close").attr("title", "");
                    }, 2500);
                    this.input.autocomplete("instance").term = "";
                },
                _destroy: function() {
                    this.wrapper.remove();
                    this.element.show();
                }
            });
        })(jQuery);
        function deleteById(id) {
            $("#" + id).remove();
        }

        function openFilter() {
            $("#filter").slideToggle('fast');
        }

        $(document).ready(function() {

            CKEDITOR.disableAutoInline = true;
            var urlModal;
            $( ".autocomplete" ).combobox();
            $('#editor').ckeditor();
            $('textarea.rta').rta('bold italic, ul ol');
            $('textarea.rta').removeClass('rta');

            $("[data-rel=tooltipTop]").tooltip({placement: 'top', delay: {show: 500, hide: 100}});
            $("[data-rel=tooltipRight]").tooltip({placement: 'right', delay: {show: 500, hide: 100}});
            $("[data-rel=tooltipLeft]").tooltip({placement: 'left', delay: {show: 500, hide: 100}});
            $("[data-rel=tooltipBottom]").tooltip({placement: 'bottom', delay: {show: 500, hide: 100}});
            $("[data-rel=popover]").popover({title: 'Informaci&oacute;n', placement: 'top', delay: {show: 100, hide: 100}});

            $.datepicker.regional['es'] = {
                closeText: 'Cerrar',
                prevText: '&#x3c;Ant',
                nextText: 'Sig&#x3e;',
                currentText: 'Hoy',
                monthNames: ['Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio',
                    'Julio', 'Agosto', 'Septiembre', 'Octubre', 'Noviembre', 'Diciembre'],
                monthNamesShort: ['Ene', 'Feb', 'Mar', 'Abr', 'May', 'Jun',
                    'Jul', 'Ago', 'Sep', 'Oct', 'Nov', 'Dic'],
                dayNames: ['Domingo', 'Lunes', 'Martes', 'Mi&eacute;rcoles', 'Jueves', 'Viernes', 'S&aacute;bado'],
                dayNamesShort: ['Dom', 'Lun', 'Mar', 'Mi&eacute;', 'Juv', 'Vie', 'S&aacute;b'],
                dayNamesMin: ['Do', 'Lu', 'Ma', 'Mi', 'Ju', 'Vi', 'S&aacute;'],
                weekHeader: 'Sm',
                dateFormat: 'dd-mm-yy',
                firstDay: 1,
                isRTL: false,
                showMonthAfterYear: false,
                yearSuffix: ''};
            $.datepicker.setDefaults($.datepicker.regional['es']);

            $("[data-loading-text]").click(function() {
                var btn = $(this);
                btn.button('loading');
                setTimeout(function() {
                    btn.button('reset');
                }, 2000);
            });

            $('#<?php echo ($this->formId) ? $this->formId : "form"; ?>').bt_validate();
            $.bt_validate.method(
                    'custom_pass_eq',
                    function(value) {
                        return ($('#password1').val() === $('#password2').val());
                    },
                    "Las contrase&ntilde;as no son iguales"
                    );

            $(".hideTooltip").click(
                    function() {
                        $(".tooltip").slideUp(300);
                    }
            );
        });
<?php
if ($this->js) {
    echo $this->js;
}
?>
    </script> 
</html>
